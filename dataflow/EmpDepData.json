{
	"name": "EmpDepData",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "empData_ForDataFlow",
						"type": "DatasetReference"
					},
					"name": "EmployeeData"
				},
				{
					"dataset": {
						"referenceName": "departmentData_ForDataFlow",
						"type": "DatasetReference"
					},
					"name": "DepartmentData"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "outPut_DataSet",
						"type": "DatasetReference"
					},
					"name": "sink"
				}
			],
			"transformations": [
				{
					"name": "EmpDepData"
				}
			],
			"scriptLines": [
				"source(output(",
				"          EmpId as string,",
				"          EmpName as string,",
				"          Gender as string,",
				"          Contact as string,",
				"          Education as string,",
				"          DepartmentId as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     enableCdc: true,",
				"     mode: 'read',",
				"     skipInitialLoad: false) ~> EmployeeData",
				"source(output(",
				"          DepartmentId as string,",
				"          DepartmentName as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     enableCdc: true,",
				"     mode: 'read',",
				"     skipInitialLoad: false,",
				"     partitionBy('hash', 1)) ~> DepartmentData",
				"EmployeeData, DepartmentData join(EmployeeData@DepartmentId == DepartmentData@DepartmentId,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     partitionBy('hash', 1),",
				"     broadcast: 'auto')~> EmpDepData",
				"EmpDepData sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['EmpDepData.csv'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     saveOrder: 1,",
				"     partitionBy('hash', 1)) ~> sink"
			]
		}
	}
}